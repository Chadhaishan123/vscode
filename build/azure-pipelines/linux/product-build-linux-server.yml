parameters:
  - name: VSCODE_QUALITY
    type: string

steps:
  - task: NodeTool@0
    inputs:
      versionSpec: "16.x"

  - ${{ if ne(parameters.VSCODE_QUALITY, 'oss') }}:
      - template: ../distro/download-distro.yml

      - task: AzureKeyVault@1
        displayName: "Azure Key Vault: Get Secrets"
        inputs:
          azureSubscription: "vscode-builds-subscription"
          KeyVaultName: vscode-build-secrets
          SecretsFilter: "github-distro-mixin-password"

      - task: Docker@1
        displayName: "Pull Docker image"
        inputs:
          azureSubscriptionEndpoint: "vscode-builds-subscription"
          azureContainerRegistry: vscodehub.azurecr.io
          command: "Run an image"
          imageName: "vscode-linux-build-agent:centos7-devtoolset8-arm64"
          containerCommand: uname
        condition: and(succeeded(), eq(variables['VSCODE_ARCH'], 'arm64'))

  - script: |
      set -e
      npm config set registry "$NPM_REGISTRY" --location=project
      npm config set always-auth=true --location=project
      yarn config set registry "$NPM_REGISTRY"
    condition: and(succeeded(), ne(variables['NPM_REGISTRY'], 'none'))
    displayName: Setup NPM & Yarn

  - task: npmAuthenticate@0
    inputs:
      workingFile: .npmrc
    condition: and(succeeded(), ne(variables['NPM_REGISTRY'], 'none'))
    displayName: Setup NPM Authentication

  - script: node build/setup-npm-registry.js $NPM_REGISTRY
    condition: and(succeeded(), ne(variables['NPM_REGISTRY'], 'none'))
    displayName: Setup NPM Registry

  - script: ./build/azure-pipelines/linux/scripts/install-remote-dependencies.sh
    displayName: Install dependencies
    env:
      GITHUB_TOKEN: "$(github-distro-mixin-password)"
    condition: and(succeeded(), eq(variables['VSCODE_ARCH'], 'x64'))

  - ${{ if ne(parameters.VSCODE_QUALITY, 'oss') }}:
      - script: docker run --rm --privileged multiarch/qemu-user-static --reset -p yes
        displayName: Register Docker QEMU
        condition: and(succeeded(), eq(variables['VSCODE_ARCH'], 'arm64'))

      - script: docker run -e VSCODE_QUALITY -e GITHUB_TOKEN -v $(pwd):/root/vscode -v ~/.netrc:/root/.netrc vscodehub.azurecr.io/vscode-linux-build-agent:centos7-devtoolset8-arm64 /root/vscode/build/azure-pipelines/linux/scripts/install-remote-dependencies.sh
        displayName: Install dependencies via qemu
        env:
          GITHUB_TOKEN: "$(github-distro-mixin-password)"
        condition: and(succeeded(), eq(variables['VSCODE_ARCH'], 'arm64'))

  - script: tar -cz --ignore-failed-read -f $(Build.ArtifactStagingDirectory)/reh_node_modules-$(VSCODE_ARCH).tar.gz -C $(Build.SourcesDirectory)/remote node_modules
    displayName: Compress node_modules output

  - task: PublishPipelineArtifact@0
    displayName: "Publish remote node_modules"
    inputs:
      artifactName: "reh_node_modules-$(VSCODE_ARCH)"
      targetPath: $(Build.ArtifactStagingDirectory)/reh_node_modules-$(VSCODE_ARCH).tar.gz
